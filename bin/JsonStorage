package services;

import models.Task;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.type.CollectionType;

import java.io.File;
import java.io.IOException;
import java.util.List;

/**
 * Classe gérant la persistance des tâches dans un fichier JSON.
 */
public class JsonStorage {
    private static final String FILE_PATH = "tasks.json"; // Chemin du fichier JSON
    private final ObjectMapper objectMapper; // ObjectMapper pour la sérialisation/désérialisation JSON

    public JsonStorage() {
        this.objectMapper = new ObjectMapper();
    }

    /**
     * Charge les tâches à partir du fichier JSON.
     * @return Liste des tâches
     * @throws IOException En cas d'erreur de lecture du fichier
     */
    public List<Task> loadTasks() throws IOException {
        File file = new File(FILE_PATH);
        if (!file.exists()) {
            file.createNewFile();
            return List.of();
        }
        CollectionType listType = objectMapper.getTypeFactory().constructCollectionType(List.class, Task.class);
        return objectMapper.readValue(file, listType);
    }

    /**
     * Sauvegarde les tâches dans le fichier JSON.
     * @param tasks Liste des tâches à sauvegarder
     * @throws IOException En cas d'erreur d'écriture dans le fichier
     */
    public void saveTasks(List<Task> tasks) throws IOException {
        objectMapper.writeValue(new File(FILE_PATH), tasks);
    }
}